{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "centOSversion": {
      "type": "string",
      "defaultValue": "7.4",
      "allowedValues": [
        "7.4"
      ],
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version."
      }
    },
    "vnetRGname": {
      "type": "string",
      "metadata": {
        "description": "Resource group containing the vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Vnet name"
      }
    },    
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "OMS Log Analytics workspace id"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "OMS Log Analytics workspace key"
      }
    },    
    "bashScriptName": {
      "type": "string",
      "defaultValue": "configureBastionVM.sh",
      "metadata": {
        "description": "Name of bash script (look at variables section for the URI that needs to be accessible to the Azure environment)"
      }
    },
    "bashScriptBaseUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/vflorusso/magento-hack/master/bastion-linux-vm/",
      "metadata": {
        "description": "Name of bash script (look at variables section for the URI that needs to be accessible to the Azure environment)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "nicName": "[concat(parameters('vmName'),'-nic')]",
    "diskType": "Premium_LRS",
    "bashScriptUri": "[concat(parameters('bashScriptBaseUri'),parameters('bashScriptName'))]",
    "publicIPAddressName": "[concat(parameters('vmName'),'-ip')]",
    "publicIPAddressType": "Dynamic",
    "vmName": "[parameters('vmName')]",
    "vmSize": "Standard_DS3_v2",
    "storageAccountName": "[concat(parameters('vmName'),'diags')]",
    "subnetRef": "[resourceId(parameters('vnetRGname'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('centOSversion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('diskType')]"
            },
            "diskSizeGB": 128
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty",
              "managedDisk": {
                "storageAccountType": "[variables('diskType')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      },
        "resources": [
          {
            "type": "extensions",
            "name": "[concat(variables('vmName'), '-monitoring')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
              "publisher": "Microsoft.EnterpriseCloud.Monitoring",
              "type": "OmsAgentForLinux",
              "typeHandlerVersion": "1.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "workspaceId": "[parameters('workspaceId')]"
              },
              "protectedSettings": {
                "workspaceKey": "[parameters('workspaceKey')]"
              }
            }
          },
          {
            "name": "configure-cron-vm",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-12-01",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "tags": {
              "displayName": "config-app"
            },
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "skipDos2Unix":false
              },
              "protectedSettings": {
                 "commandToExecute": "[concat('./',parameters('bashScriptName'))]",
                 "fileUris": ["[variables('bashScriptUri')]"]
              }
            }
          }          
        ]
      }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    }
  }
}